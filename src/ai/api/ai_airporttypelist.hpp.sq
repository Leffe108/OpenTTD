/* $Id$ */

/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "ai_airporttypelist.hpp"

namespace SQConvert {
	/* Allow AIAirportTypeList to be used as Squirrel parameter */
	template <> AIAirportTypeList *GetParam(ForceType<AIAirportTypeList *>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr) { SQUserPointer instance; sq_getinstanceup(vm, index, &instance, 0); return  (AIAirportTypeList *)instance; }
	template <> AIAirportTypeList &GetParam(ForceType<AIAirportTypeList &>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr) { SQUserPointer instance; sq_getinstanceup(vm, index, &instance, 0); return *(AIAirportTypeList *)instance; }
	template <> const AIAirportTypeList *GetParam(ForceType<const AIAirportTypeList *>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr) { SQUserPointer instance; sq_getinstanceup(vm, index, &instance, 0); return  (AIAirportTypeList *)instance; }
	template <> const AIAirportTypeList &GetParam(ForceType<const AIAirportTypeList &>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr) { SQUserPointer instance; sq_getinstanceup(vm, index, &instance, 0); return *(AIAirportTypeList *)instance; }
	template <> int Return<AIAirportTypeList *>(HSQUIRRELVM vm, AIAirportTypeList *res) { if (res == NULL) { sq_pushnull(vm); return 1; } res->AddRef(); Squirrel::CreateClassInstanceVM(vm, "AIAirportTypeList", res, NULL, DefSQDestructorCallback<AIAirportTypeList>); return 1; }
} // namespace SQConvert

void SQAIAirportTypeList_Register(Squirrel *engine)
{
	DefSQClass <AIAirportTypeList> SQAIAirportTypeList("AIAirportTypeList");
	SQAIAirportTypeList.PreRegister(engine, "AIList");
	SQAIAirportTypeList.AddConstructor<void (AIAirportTypeList::*)(), 1>(engine, "x");

	SQAIAirportTypeList.PostRegister(engine);
}
